# Generated by Django 5.1.6 on 2025-07-04 17:44

import django.db.models.deletion
import shop.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CityDescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('text', models.TextField(max_length=20000, null=True, verbose_name='Опис')),
                ('json_text', models.TextField(max_length=20000, null=True)),
                ('title', models.CharField(max_length=255, null=True)),
                ('meta_description', models.CharField(max_length=255, null=True)),
                ('last_modified', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'city_description',
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=5, unique=True)),
                ('value', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='InfoDescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('text', models.TextField(max_length=20000, null=True, verbose_name='Опис')),
                ('json_text', models.TextField(max_length=20000, null=True)),
                ('title', models.CharField(max_length=255, null=True)),
                ('meta_description', models.CharField(max_length=255, null=True)),
                ('last_modified', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'page_description',
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=5)),
                ('image', models.ImageField(upload_to='lang/')),
                ('name', models.CharField(max_length=20, null=True)),
                ('path', models.CharField(max_length=255, null=True)),
                ('ISOcode', models.CharField(max_length=5, null=True)),
                ('active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Redirect',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old', models.CharField(max_length=255, unique=True)),
                ('new', models.CharField(max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Robots',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.CharField(max_length=1000, verbose_name='Текст')),
                ('mobile', models.BooleanField(default=0)),
            ],
            options={
                'verbose_name': 'robots',
                'verbose_name_plural': 'robots',
            },
        ),
        migrations.CreateModel(
            name='Settings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attention_message', models.CharField(max_length=255, null=True, verbose_name='Уведомление')),
                ('sitemap_cache', models.DateTimeField(null=True)),
                ('api_key', models.CharField(max_length=255, null=True, verbose_name='API_KEY novaposhta.ua')),
                ('senderRef', models.CharField(max_length=255, null=True)),
                ('contactsRef', models.CharField(max_length=255, null=True)),
                ('phone', models.CharField(max_length=20, null=True, verbose_name='Телефон novaposhta.ua')),
                ('logo', models.ImageField(null=True, upload_to='logo/')),
                ('wotermark', models.ImageField(null=True, upload_to='logo/')),
                ('google_analytics', models.CharField(max_length=255, null=True)),
                ('google_tag', models.CharField(max_length=255, null=True)),
                ('google_adwords', models.CharField(max_length=255, null=True)),
                ('google_verification', models.CharField(max_length=255, null=True)),
                ('google_conversion', models.CharField(max_length=255, null=True)),
                ('facebook_id', models.CharField(max_length=255, null=True)),
                ('phones', shop.fields.JSONField(max_length=255, null=True)),
                ('emails', shop.fields.JSONField(max_length=255, null=True)),
                ('video_banner', models.BooleanField(default=0)),
                ('video_url', models.CharField(max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Настройки',
                'verbose_name_plural': 'Настройки',
            },
        ),
        migrations.CreateModel(
            name='Setup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fixtures_loaded', models.BooleanField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Slider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.CharField(max_length=255, verbose_name='URL')),
                ('image', models.ImageField(max_length=255, upload_to='data/slider/', verbose_name='Изображение')),
                ('position', models.PositiveIntegerField(verbose_name='Порядковый номер')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Слайдер',
                'verbose_name_plural': 'Слайдер',
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='Sms',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=1000)),
                ('type', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='StaticFiles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('css', models.PositiveIntegerField(default=1)),
                ('js', models.PositiveIntegerField(default=1)),
                ('type', models.CharField(choices=[('shop', 'Shop'), ('manager', 'Manager')], default='shop', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(max_length=255, unique=True, verbose_name='URL')),
                ('last_modified', models.DateTimeField(auto_now_add=True)),
                ('description', models.ManyToManyField(related_name='obj', to='shop.citydescription')),
            ],
            options={
                'verbose_name': 'Міста',
                'verbose_name_plural': 'Міста',
            },
        ),
        migrations.CreateModel(
            name='Info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_modified', models.DateTimeField(auto_now_add=True)),
                ('position', models.PositiveIntegerField(choices=[(1, 'header_menu'), (2, 'footer_menu')], null=True)),
                ('description', models.ManyToManyField(related_name='obj', to='shop.infodescription')),
            ],
            options={
                'verbose_name': 'Simple page',
                'verbose_name_plural': 'Simple pages',
                'ordering': ['-id'],
            },
        ),
        migrations.AddField(
            model_name='infodescription',
            name='language',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='shop.language'),
        ),
        migrations.AddField(
            model_name='citydescription',
            name='language',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='shop.language'),
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.CharField(max_length=255, verbose_name='Автар')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('description', models.CharField(max_length=2000)),
                ('active', models.BooleanField(default=0, verbose_name='Активен')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата добавления')),
                ('parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child', to='shop.review')),
            ],
            options={
                'verbose_name': 'Отзывы',
                'verbose_name_plural': 'Отзывы',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AlterUniqueTogether(
            name='infodescription',
            unique_together={('language', 'meta_description'), ('language', 'name'), ('language', 'title')},
        ),
        migrations.CreateModel(
            name='DefaultMetaData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=20)),
                ('title', models.CharField(max_length=100)),
                ('meta_description', models.CharField(max_length=255)),
                ('language', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='shop.language')),
            ],
            options={
                'unique_together': {('language', 'model')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='citydescription',
            unique_together={('language', 'meta_description'), ('language', 'name'), ('language', 'title')},
        ),
        migrations.CreateModel(
            name='Url',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_name', models.CharField(max_length=16)),
                ('model_id', models.PositiveIntegerField()),
                ('string', models.CharField(max_length=255)),
                ('view', models.CharField(max_length=255)),
                ('cached', models.BooleanField(default=False)),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.language')),
            ],
            options={
                'verbose_name': 'URL',
                'verbose_name_plural': 'URL',
                'unique_together': {('string', 'model_id', 'model_name', 'language')},
            },
        ),
    ]
