"""
Django settings for miracles project.

Generated by 'django-admin startproject' using Django 4.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
import os,pymysql,sys
from decouple import config

USER = "dd"
GROUP = "www-data"

pymysql.install_as_MySQLdb()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
HOME_DIR = BASE_DIR.parent

CACHE_FOLDER = "/var/cache/miracles.site/"

COMPANY_NAME = "Company Name"

PROTOCOL = "https"

ADMIN_BASE_URL = "https://manager.miracles.site/"

PHONES = ['123','123','123','1123']

sys.path.append(HOME_DIR)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-vgn&%r%0_q8)i%zj*)vol*3f(ttl4e39)yn(3#2(!jl#*5mxbr'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config("DEBUG", cast=bool)

ALLOWED_HOSTS = ['miracles.site']
HOST = 'miracles.site'
DOMAIN = "miracles.site"
BASE_URL = "miracles.site"

# Application definition

INSTALLED_APPS = [
    'mptt',
    'cv',
    'shop',
    'user',
    'catalog',
    'checkout',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_user_agents'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'user.middleware.locale.LocaleMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django_user_agents.middleware.UserAgentMiddleware',
    'shop.middleware.main.MainMiddleware'
]

ROOT_URLCONF = 'system.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [HOME_DIR / 'client/html',
                HOME_DIR / 'client/image',
                CACHE_FOLDER + 'html',
                CACHE_FOLDER + 'static'],
        # 'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'user.context.auth',
                'shop.context.meta',
                'shop.context.default'
            ]
        },
    },
]

WSGI_APPLICATION = 'system.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

if 'RDS_HOSTNAME' in os.environ:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': os.environ['RDS_DB_NAME'],
            'USER': os.environ['RDS_USERNAME'],
            'PASSWORD': os.environ['RDS_PASSWORD'],
            'HOST': os.environ['RDS_HOSTNAME'],
            'PORT': os.environ['RDS_PORT'],
        }
    }

else:

    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': config["DB_NAME"],
            'USER': config["DB_USER"],
            'PASSWORD': config["DB_PASSWORD"],
            'HOST':'localhost'
        }
    }


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'uk'
DEFAULT_LANGUAGE_CODE = 'uk'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

LANGUAGES = (
    ('uk-UA', 'Українська'),
    ('uk', 'Українська'),
    ('ua', 'Українська'),
    ('en', 'English'),
    ('nl', 'Dutch'),
    ('de', 'Deutsch'),
)

AVAIL_LANGUAGES = {
    'ua':'ua',
    'uk-ua':'ua',
    'uk-UA':'ua',
    'ua-UA':'ua',
    'uk':'ua',
    'en':'en',
    'en-US':'en',
    'nl':'nl',
    'de':'de',
    'de-DE':'de'
}

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = '/static/'
STATIC_SOURCE_ROOT = HOME_DIR / 'client/static/'
MINIFIED_ROOT = CACHE_FOLDER + 'static/'
STATIC_ROOT = ''
STATICFILES_DIRS = ['/var/cache/miracles.site/static/']
SVG_CACHE_FOLDER = CACHE_FOLDER + "static/image/svg/"

# Define the output directory
MINIFIED_OUTPUR_DIR = CACHE_FOLDER + 'min'

# Define the number of versions to keep
MAX_MINIFIED_VERSIONS = 3

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'user.User'

from django.utils.translation import gettext as _

DEFAULT_CURRENCY = "UAH"

#SMTP
EMAIL = 'ffs@gmail.com'
EMAIL_TITLE = ''
EMAIL_HOST = 'gmail.com'
EMAIL_HOST_USER = 'info'
EMAIL_HOST_PASSWORD = 'Портал'
EMAIL_PORT = 25

LOCALE_PATHS = (
    BASE_DIR / 'locale',
    HOME_DIR / 'client/locale',
)
LANGUAGE_SESSION_KEY = 'language'

MEDIA_ROOT = f"{BASE_DIR}/media"

NO_IMAGE_PLACEHOLDER = "<image='no_image.jpg'>"

WATERMARK = "/media/watermark.png"

# Define the directories where CSS and JS files are stored
CSS_DIR = 'css'
JS_DIR = 'js'

YOUTUBE_LINK = "https://youtube.com"
FACEBOOK_LINK = "https://facebook.com"
ADDRESS = ""
IOS_APP = ""